push 3
pop ax
push ax
pop [dx+1]
push 127
pop bx
in
push [dx+1]
div
out
call firstLabel
jmp FOURTH_LABEL
add

firstLabel:
    call ___ThirdLabel123__  ; why 5?
    ret

secondLabel:
    push 3
    push bx
    add
    pop cx
    mul
    sub
    div
    out

___ThirdLabel123__:
    push 97
    out
    ret

FOURTH_LABEL:
    in
    push 16
    push 4
    halt

